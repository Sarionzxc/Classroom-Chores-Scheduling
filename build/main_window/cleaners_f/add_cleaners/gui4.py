
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Frame, StringVar, Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import controller as db_controller



OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def addCleaners():
    AddCleaners()

class AddCleaners(Frame):
     def __init__(self, parent, controller=None, *args, **kwargs):
        Frame.__init__(self, parent, *args, **kwargs)
        self.parent = parent

        self.data = {
           "group_leader": StringVar(),
            "members": StringVar(),
            "schedule_day": StringVar(),
            "cleaning": StringVar()
            }

        self.configure(bg = "#FFFFFF")


        canvas = Canvas(
            self,
            bg = "#FFFFFF",
            height = 420,
            width = 706,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_text(
            245.0,
            20.0,
            anchor="nw",
            text="Cleaners",
            fill="#000000",
            font=("InriaSerif Bold", 50 * -1)
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            193.0,
            137.0,
            image=self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            193.0,
            247.0,
            image=self.image_image_2
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            515.0,
            137.0,
            image=self.image_image_3
        )

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = canvas.create_image(
            515.0,
            250.0,
            image=self.image_image_4
        )

        canvas.create_text(
            67.0,
            107.0,
            anchor="nw",
            text="Group Leader:",
            fill="#000000",
            font=("InriaSerif Bold", 15 * -1)
        )

        canvas.create_text(
            386.0,
            105.0,
            anchor="nw",
            text="Schedule:",
            fill="#000000",
            font=("InriaSerif Bold", 15 * -1)
        )

        canvas.create_text(
            386.0,
            195.0,
            anchor="nw",
            text="What to bring:",
            fill="#000000",
            font=("InriaSerif Bold", 15 * -1)
        )

        canvas.create_text(
            67.0,
            189.0,
            anchor="nw",
            text="Members:",
            fill="#000000",
            font=("InriaSerif Bold", 15 * -1)
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_1 = canvas.create_image(
            191.5,
            150.5,
            image=self.entry_image_1
        )
        entry_1 = Entry(
            self,
            textvariable=self.data['group_leader'],
            bd=0,
            bg="#9AB3DA",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=67.0,
            y=130.0,
            width=249.0,
            height=39.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        entry_bg_2 = canvas.create_image(
            513.0,
            146.0,
            image=self.entry_image_2
        )
        entry_2 = Entry(
            self,
            textvariable=self.data['schedule_day'],
            bd=0,
            bg="#9AB3DA",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=386.0,
            y=124.0,
            width=254.0,
            height=42.0
        )

        self.entry_image_3 = PhotoImage(
            file=relative_to_assets("entry_3.png"))
        entry_bg_3 = canvas.create_image(
            513.0,
            238.0,
            image=self.entry_image_3
        )
        entry_3 = Entry(
            self,
            textvariable=self.data['cleaning'],
            bd=0,
            bg="#9AB3DA",
            fg="#000716",
            highlightthickness=0
        )
        entry_3.place(
            x=386.0,
            y=223.0,
            width=254.0,
            height=28.0
        )

        self.entry_image_4 = PhotoImage(
            file=relative_to_assets("entry_4.png"))
        entry_bg_4 = canvas.create_image(
            194.5,
            247.0,
            image=self.entry_image_4
        )
        entry_4 = Entry(
            self,
            textvariable=self.data['members'],
            bd=0,
            bg="#9AB3DA",
            fg="#000716",
            highlightthickness=0
        )
        entry_4.place(
            x=73.0,
            y=212.0,
            width=243.0,
            height=68.0
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.save,
            relief="flat"
        )
        button_1.place(
            x=465.0,
            y=347.0,
            width=87.0,
            height=41.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.parent.navigate("view"),
            relief="flat"
        )
        button_2.place(
            x=359.0,
            y=347.0,
            width=87.0,
            height=41.0
        )

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            self,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=self.clear_entries,
            relief="flat"
        )
        button_3.place(
            x=571.0,
            y=348.0,
            width=87.0,
            height=39.0
        )
     def save(self):
       
        # check if any fields are empty
        for val in self.data.values():
            if val.get() == "":
                messagebox.showinfo("Error", "Please Fill in all the Fields")
                return

        result = db_controller.add_cleaners(
            *[self.data[label].get() for label in ("group_leader","members","schedule_day", "cleaning")]

        )

        if result:
            messagebox.showinfo("Success", "Cleaners Added Successfully")
            self.parent.navigate("view")
            self.parent.windows.get("view").handle_refresh()
            # clear all fields
            for label in self.data.keys():
                self.data[label].set('')
        else:
            messagebox.showerror(
                "Error", "Unable to Activity. Please make sure the data is validated"
            )

        
     def clear_entries(self):
        # Iterate over all entry fields and set their values to an empty string
        for var in self.data.values():
            var.set("")




