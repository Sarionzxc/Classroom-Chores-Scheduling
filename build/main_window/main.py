
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, messagebox

from build.main_window.home.gui2 import Home
from build.main_window.dashboard.gui3 import Dashboard
from build.main_window.cleaners_f.main import Cleaners
from datetime import datetime

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)



def mainWindow():
    MainWindow()
    
class MainWindow(Toplevel):
     def __init__(self, *args, **kwargs):
        Toplevel.__init__(self, *args, **kwargs)

        self.title("Classroom Chores Scheduling  System")
        self.geometry("808x420")
        self.configure(bg = "#3B6EF2")

        # Calculate the position to center the window
        screen_width = self.winfo_screenwidth()
        screen_height = self.winfo_screenheight()
        window_width = 808
        window_height = 420
        x_position = (screen_width - window_width) // 2
        y_position = (screen_height - window_height) // 2

        self.geometry(f"{window_width}x{window_height}+{x_position}+{y_position}")


        canvas = Canvas(
            self,
            bg = "#3B6EF2",
            height = 420,
            width = 808,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            52.0,
            40.0,
            image=self.image_image_1
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.home_button = Button(
            self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.handle_btn_press(self.home_button,"home"),
            relief="flat"
        )
        self.home_button.place(
            x=0.0,
            y=155.0,
            width=102.0,
            height=48.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.dashboard_button = Button(
            self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.handle_btn_press(self.dashboard_button,"dash"),
            relief="flat"
        )
        self.dashboard_button.place(
            x=0.0,
            y=206.0,
            width=102.0,
            height=47.66666793823242
        )

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        self.cleaners_button = Button(
            self,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.handle_btn_press(self.cleaners_button,"add"),
            relief="flat"
        )
        self.cleaners_button.place(
            x=0.0,
            y=259.0,
            width=102.0,
            height=48.0
        )

        self.button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        button_4 = Button(
            self,
            image=self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=self.logout,
            relief="flat"
        )
        button_4.place(
            x=0.0,
            y=349.0,
            width=102.0,
            height=52.0
        )

        canvas.create_rectangle(
            102.0,
            0.0,
            808.0,
            420.0,
            fill="#FFFFFF",
            outline="")
        self.windows = {
            "home":Home(self),
            "dash":Dashboard(self),
            "add": Cleaners(self),
                      
         }
     
        #dri.ilisan.pang.frontpage
        self.handle_btn_press(self.home_button, "home")
        #self.sidebar_indicator.place(x=0, y=124)
        self.resizable(False, False)
        self.mainloop()
        self.current_window.place(x=102, y=0, width=706, height=420)
        self.current_window.tkraise()
    
     
     def place_sidebar_indicator(self):
        pass    
    
     def logout(self):
        confirm = messagebox.askyesno(
            "Confirm log-out", "Do you really want to log out?"
        )
        if confirm == True:
            user = None
            self.destroy()
            #login_page.LoginPage()
     
     def handle_btn_press(self, caller, name):
        # Place the sidebar on respective button
      #  self.sidebar_indicator.place(x=0, y=caller.winfo_y())

        # Hide all screens
        for window in self.windows.values():
            window.place_forget()

        # Set ucrrent Window
        self.current_window = self.windows.get(name)

        # Show the screen of the button pressed
        self.windows[name].place(x=102, y=0, width=706, height=420)
     

     def handle_dashboard_refresh(self):
        # Recreate the dash window
        self.windows["home"] = Home(self)

#if __name__ == "__main__":
 #  main_window = MainWindow()
  # main_window.mainloop()
